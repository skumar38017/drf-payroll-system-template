# Generated by Django 5.1.5 on 2025-01-22 07:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('mobile', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='salary_user_set', related_query_name='user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='The permissions this user has.', related_name='salary_user_permissions', related_query_name='user', to='auth.permission')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SalarySlip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watermark', models.ImageField(upload_to='watermarks/')),
                ('company_logo', models.FileField(blank=True, null=True, upload_to='company_logos/')),
                ('company_name', models.CharField(max_length=100)),
                ('payslip_number', models.CharField(max_length=50)),
                ('company_info', models.CharField(max_length=100)),
                ('company_phone', models.CharField(max_length=15)),
                ('company_email', models.EmailField(max_length=254)),
                ('company_website', models.URLField()),
                ('company_address', models.TextField()),
                ('employee_no', models.CharField(max_length=50)),
                ('employee_name', models.CharField(max_length=100)),
                ('doj', models.DateField()),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_account', models.CharField(max_length=20)),
                ('bank_ifsc', models.CharField(max_length=20)),
                ('uan_no', models.CharField(max_length=20)),
                ('pan_no', models.CharField(max_length=20)),
                ('branch', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('total_days', models.IntegerField()),
                ('lop', models.IntegerField()),
                ('work_days', models.IntegerField()),
                ('effective_work_days', models.IntegerField()),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('hra', models.DecimalField(decimal_places=2, max_digits=10)),
                ('special_allowance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('accommodation_allowance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('epf_employee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gmi', models.DecimalField(decimal_places=2, max_digits=10)),
                ('professional_tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_gross', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_deduction', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_fbp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('net_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('note', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_slips', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
